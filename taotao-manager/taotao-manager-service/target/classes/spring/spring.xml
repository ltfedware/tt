<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://code.alibabatech.com/schema/dubbo        
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- Service层扫描 -->
	<context:component-scan base-package="com.taotao.manager.service.impl" />

	<!-- 解析jdbc配置文件 -->
	<context:property-placeholder location="classpath:resource/*.properties" />

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) 事务传播特性配置 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="java.lang.Exception" />
			<tx:method name="modify*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="java.lang.Exception" />

			<!-- 查询方法 -->
			<tx:method name="query*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 配置数据源 -->
	<!-- don't forget the DataSource -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${dataSource.driverClass}" />
		<property name="jdbcUrl" value="${dataSource.jdbcUrl}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>


	<!-- 声明式事务AOP配置 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.taotao.manager.service.impl.*.*(..))"
			id="tranpointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tranpointcut" />
	</aop:config>


	<!-- MyBatis配置 SqlSessionFactory配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:mybatis/mybatis.xml"
		p:typeAliasesPackage="com.taotao.manager.model">
		<property name="mapperLocations">
			<list>
				<value>classpath:com/taotao/manager/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>


	<!-- 配置Mapper扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.taotao.manager.mapper" p:sqlSessionFactoryBeanName="sqlSessionFactory" />



	<!-- 注册一个dubbo应用 -->
	<dubbo:application name="taotao-manager-service" />

	<!-- 指定dubbo注册地址 -->
	<!--<dubbo:registry address="multicast://224.5.6.7:1234" />-->
	<dubbo:registry address="zookeeper://192.168.25.133:2181" />

	<!-- 暴露对外提供服务的端口 -->
	<dubbo:protocol name="dubbo" port="20880" />

	<!-- 注册提供服务的接口 -->
	<dubbo:service interface="com.taotao.manager.service.UserService" ref="userServiceImpl" />
	<dubbo:service interface="com.taotao.manager.service.ItemCatService" ref="itemCatServiceImpl" />
	<dubbo:service interface="com.taotao.manager.service.ItemService" ref="itemServiceImpl" />
	<dubbo:service interface="com.taotao.manager.service.ContentCategoryService" ref="contentCategoryServiceImpl" />

</beans>
